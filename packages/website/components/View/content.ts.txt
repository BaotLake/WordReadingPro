import { createElement, HTMLProps, CSSProperties } from 'react'

function style2CSSProperties(style: CSSStyleDeclaration) {
    let properties: CSSProperties = {}

    for (let i = 0; i < style.length; i++) {
        let index = style[i].replace(/-([a-z])/g, (m, g) => g.toUpperCase())
        // TODO
        // @ts-ignore
        properties[index] = style[style[i]]
    }
}

function htmlAttribute2React(el: Element) {
    if (!el.attributes) return {}
    let attributes: HTMLProps<Element> = {}

    for (let i = 0; i < el.attributes.length; i++) {
        let name = el.attributes[i].name
        let value = el.attributes[i].value

        switch (name) {
            case 'class':
                name = 'className'
                break
            case 'for':
                name = 'htmlFor'
                break
            case 'style':
                break
            case 'onclick':
                name = 'onClick'
                // value = '#'
                break
            case 'onload':
                name = 'onLoad'
                break
            case 'onkeypress':
                name = 'onKeyPress'
                break

            case 'tabindex':
                name = 'tabIndex'
                break
            case 'itemprop':
                name = 'itemProp'
                break
            case 'itemscope':
                name = 'itemScope'
                break
            case 'itemtype':
                name = 'itemType'
                break
            case 'nomodule':
                name = 'noModule'
                break
            case 'autocapitalize':
                name = 'autoCapitalize'
                break
            case 'acceptcharset':
                name = 'acceptCharset'
                break
            case 'autocomplete':
                name = 'autoComplete'
                break
            case 'crossorigin':
                name = 'crossOrigin'
                break
            case 'autocorrect':
                name = 'autoCorrect'
                break
            case 'spellcheck':
                name = 'spellCheck'
                break
            case 'playsinline':
                name = 'playsInline'
                break
            case 'colspan':
                name = 'colSpan'
                break
            case 'maxlength':
                name = 'maxLength'
                break
            case 'hreflang':
                name = 'hrefLang'
                break
            case 'xml:space':
            case 'fill-rule':
            case 'clip-rule':
            case 'stroke-linecap':
            case 'stroke-miterlimit':
            case 'stroke-width':
            case 'stroke-linejoin':
            case 'xmlns:xlink':
            case 'enable-background':
            case 'accept-charset':
                name = name.replace(/\W([a-z])/g, (m, g) => g.toUpperCase())
                break
            default:
                break
        }

        attributes[name as keyof typeof attributes] = value
    }
}
